/*
 * Open Service Broker API
 *
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * API version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServiceBindingResourceObject struct for ServiceBindingResourceObject
type ServiceBindingResourceObject struct {
	AppGuid *string `json:"app_guid,omitempty"`
	Route *string `json:"route,omitempty"`
}

// NewServiceBindingResourceObject instantiates a new ServiceBindingResourceObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceBindingResourceObject() *ServiceBindingResourceObject {
	this := ServiceBindingResourceObject{}
	return &this
}

// NewServiceBindingResourceObjectWithDefaults instantiates a new ServiceBindingResourceObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceBindingResourceObjectWithDefaults() *ServiceBindingResourceObject {
	this := ServiceBindingResourceObject{}
	return &this
}

// GetAppGuid returns the AppGuid field value if set, zero value otherwise.
func (o *ServiceBindingResourceObject) GetAppGuid() string {
	if o == nil || o.AppGuid == nil {
		var ret string
		return ret
	}
	return *o.AppGuid
}

// GetAppGuidOk returns a tuple with the AppGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResourceObject) GetAppGuidOk() (*string, bool) {
	if o == nil || o.AppGuid == nil {
		return nil, false
	}
	return o.AppGuid, true
}

// HasAppGuid returns a boolean if a field has been set.
func (o *ServiceBindingResourceObject) HasAppGuid() bool {
	if o != nil && o.AppGuid != nil {
		return true
	}

	return false
}

// SetAppGuid gets a reference to the given string and assigns it to the AppGuid field.
func (o *ServiceBindingResourceObject) SetAppGuid(v string) {
	o.AppGuid = &v
}

// GetRoute returns the Route field value if set, zero value otherwise.
func (o *ServiceBindingResourceObject) GetRoute() string {
	if o == nil || o.Route == nil {
		var ret string
		return ret
	}
	return *o.Route
}

// GetRouteOk returns a tuple with the Route field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResourceObject) GetRouteOk() (*string, bool) {
	if o == nil || o.Route == nil {
		return nil, false
	}
	return o.Route, true
}

// HasRoute returns a boolean if a field has been set.
func (o *ServiceBindingResourceObject) HasRoute() bool {
	if o != nil && o.Route != nil {
		return true
	}

	return false
}

// SetRoute gets a reference to the given string and assigns it to the Route field.
func (o *ServiceBindingResourceObject) SetRoute(v string) {
	o.Route = &v
}

func (o ServiceBindingResourceObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppGuid != nil {
		toSerialize["app_guid"] = o.AppGuid
	}
	if o.Route != nil {
		toSerialize["route"] = o.Route
	}
	return json.Marshal(toSerialize)
}

type NullableServiceBindingResourceObject struct {
	value *ServiceBindingResourceObject
	isSet bool
}

func (v NullableServiceBindingResourceObject) Get() *ServiceBindingResourceObject {
	return v.value
}

func (v *NullableServiceBindingResourceObject) Set(val *ServiceBindingResourceObject) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceBindingResourceObject) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceBindingResourceObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceBindingResourceObject(val *ServiceBindingResourceObject) *NullableServiceBindingResourceObject {
	return &NullableServiceBindingResourceObject{value: val, isSet: true}
}

func (v NullableServiceBindingResourceObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceBindingResourceObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


